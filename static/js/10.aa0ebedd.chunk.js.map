{"version":3,"sources":["components/HeadingRenderer.js","pages/Diary.js"],"names":["flatten","text","child","React","Children","toArray","props","children","reduce","HeadingRenderer","level","children2","slug","toLowerCase","replace","createElement","id","sections","Diary","useTranslation","t","i18n","Main","title","description","className","to","href","target","rel","Trans","i18nKey","map","s","sec","components","h1","rehypePlugins","rehypeRaw","language"],"mappings":"iMAGMA,EAAU,SAAVA,EAAWC,EAAMC,GAAP,MAAmC,kBAAVA,EACrCD,EAAOC,EACPC,IAAMC,SAASC,QAAQH,EAAMI,MAAMC,UAAUC,OAAOR,EAASC,IAkBlDQ,EAZS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOH,EAAe,EAAfA,SAC1BI,EAAYR,IAAMC,SAASC,QAAQE,GAEnCK,EADOD,EAAUH,OAAOR,EAAS,IACrBa,cAAcC,QAAQ,MAAO,KAC/C,OAAOX,IAAMY,cAAN,WAAwBL,GAAS,CAAEM,GAAIJ,GAAQD,I,OCElDM,EAAW,CACf,sBACA,aACA,8BACA,0BACA,gCA+CaC,UA5CD,WACZ,MAAoBC,cAAZC,EAAR,EAAQA,EAAGC,EAAX,EAAWA,KACX,OACE,cAACC,EAAA,EAAD,CACEC,MAAOH,EAAE,SACTI,YAAaJ,EAAE,+BAFjB,SAIE,0BAASK,UAAU,gBAAgBT,GAAG,QAAtC,UACE,iCACE,sBAAKS,UAAU,QAAf,UACE,oBAAI,cAAY,UAAhB,SAA0B,cAAC,IAAD,CAAMC,GAAG,SAAT,SAAmBN,EAAE,yBAC/C,4BACE,mBAAGO,KAAMP,EAAE,mBAAoBQ,OAAO,SAASC,IAAI,aAAnD,SACE,eAACC,EAAA,EAAD,CAAOC,QAAQ,iBAAiBX,EAAGA,EAAnC,0DAC+C,uBAD/C,8DAQR,6BAAKA,EAAE,aACP,qBAAKK,UAAU,iBAAf,SACE,6BACGR,EAASe,KAAI,SAACC,GAAD,OAAOb,EAAEa,MAAID,KAAI,SAACE,GAAD,OAC7B,6BACE,6BACE,mBAAGP,KAAI,WAAMO,EAAIrB,cAAcC,QAAQ,MAAO,MAA9C,SAAuDoB,KADhDA,YAOjB,cAAC,IAAD,CACEC,WAAY,CAAEC,GAAI3B,GAClB4B,cAAe,CAACC,KAFlB,SAIqB,OAAlBjB,EAAKkB,SA/CA,wpXADF","file":"static/js/10.aa0ebedd.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst flatten = (text, child) => (typeof child === 'string'\n  ? text + child\n  : React.Children.toArray(child.props.children).reduce(flatten, text));\n\n/**\n * HeadingRenderer is a custom renderer\n * It parses the heading and attaches an id to it to be used as an anchor\n */\nconst HeadingRenderer = ({ level, children }) => {\n  const children2 = React.Children.toArray(children);\n  const text = children2.reduce(flatten, '');\n  const slug = text.toLowerCase().replace(/\\W/g, '-');\n  return React.createElement(`h${level}`, { id: slug }, children2);\n};\n\nHeadingRenderer.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\n  level: PropTypes.number.isRequired,\n};\n\nexport default HeadingRenderer;\n","import React from 'react';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport raw from 'raw.macro';\nimport ReactMarkdown from 'react-markdown';\nimport rehypeRaw from 'rehype-raw';\n\nimport Main from '../layouts/Main';\nimport HeadingRenderer from '../components/HeadingRenderer';\n\n// Make all hrefs react router links\n// const LinkRenderer = ({ ...children }) => <Link {...children} />;\n\n// uses babel to load contents of file\nconst markdown = raw('../data/diary.md');\nconst markdownCS = raw('../data/diary.cs.md');\n\nconst sections = [\n  'The meaning of life',\n  'Growing up',\n  \"Women don't bite, mostly...\",\n  'The chains of addiction',\n  'Fighting the inner introvert',\n];\n\nconst Diary = () => {\n  const { t, i18n } = useTranslation();\n  return (\n    <Main\n      title={t('Diary')}\n      description={t('Is there a meaning in life?')}\n    >\n      <article className=\"post markdown\" id=\"diary\">\n        <header>\n          <div className=\"title\">\n            <h2 data-testid=\"heading\"><Link to=\"/diary\">{t('Diary of thoughts')}</Link></h2>\n            <p>\n              <a href={t('DIARY.VIDEOLINK')} target=\"_blank\" rel=\"noreferrer\">\n                <Trans i18nKey=\"DIARY.SUBTITLE\" t={t}>\n                  Is this the real life? Is this just fantasy? <br />\n                  Caught in a landslide, no escape from reality..\n                </Trans>\n              </a>\n            </p>\n          </div>\n        </header>\n        <h1>{t('Content')}</h1>\n        <div className=\"link-container\">\n          <ul>\n            {sections.map((s) => t(s)).map((sec) => (\n              <li>\n                <h4 key={sec}>\n                  <a href={`#${sec.toLowerCase().replace(/\\W/g, '-')}`}>{sec}</a>\n                </h4>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <ReactMarkdown\n          components={{ h1: HeadingRenderer }}\n          rehypePlugins={[rehypeRaw]}\n        >\n          {i18n.language === 'cs' ? markdownCS : markdown}\n        </ReactMarkdown>\n      </article>\n    </Main>\n  );\n};\n\nexport default Diary;\n"],"sourceRoot":""}